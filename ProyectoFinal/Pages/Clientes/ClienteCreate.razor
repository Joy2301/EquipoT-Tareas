@page "/Clientes/ccreate"
@using System.Net.Http.Json
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web.Virtualization

<div class="container">
    <h3>Registrar un nuevo cliente.</h3>

    <EditForm Model="@cliente" OnValidSubmit="RegistrarCliente">
        <table class="table">
            <tr>
                <td>Cedula:</td>
                <td>
                    <input type="text" class="form-control col-sm-6" @bind="@cliente.Cedula">
                </td>
            </tr>
            <tr>
                <td>Nombre:</td>
                <td>
                    <input type="text" class="form-control col-sm-6" @bind="@cliente.Nombre">
                </td>
            </tr>
            <tr>
                <td>Apellido:</td>
                <td>
                    <input type="text" class="form-control col-sm-6" @bind="@cliente.Apellido">
                </td>
            </tr>
            <tr>
                <td>Correo:</td>
                <td>
                    <input type="email" class="form-control col-sm-6" @bind="@cliente.Correo">
                </td>
            </tr>
            <tr>
                <td>Licencia:</td>
                <td>
                    <input type="text" class="form-control col-sm-6" @bind="@cliente.Licencia">
                </td>
            </tr>
            <tr>
                <td>Nacionalidad:</td>
                <td>
                    <input type="text" class="form-control col-sm-6" @bind="@cliente.Nacionalidad">
                </td>
            </tr>
            <tr>
                <td>Tipo de sangre:</td>
                <td>
                    <InputSelect class="form-control col-sm-6" @bind-Value="@cliente.TipoSangreId">
                        <option value=0>Tipo de Sangre...</option>
                        @foreach (var tipo in GetTiposSangre())
                        {
                            <option value="@tipo.Id"> @tipo.Nombre </option>
                        }
                    </InputSelect>
                </td>
            </tr>
            <tr>
                <td>Foto del cliente:</td>
                <td>
                    <InputFile OnChange="InputImageCliente" class="form-control-file" />
                </td>
            </tr>
            <tr>
                <td>Foto de la licencia:</td>
                <td>
                    <InputFile OnChange="InputImageLicencia" class="form-control-file" />
                </td>
            </tr>
        </table>
    </EditForm>
    <input type="submit" value="Guardar" class="btn btn-primary" @onclick="RegistrarCliente" />
    <br><br>
    @mensaje
    <br><br>
</div>

@code {

    gestion_vehicularContext db = new gestion_vehicularContext();
    Clientes cliente = new Clientes();
    string mensaje = "Nada ha sido enviado aun.";

    private async Task InputImageCliente(InputFileChangeEventArgs e)
    {
        var format = "image/jpg";

        var resizedImage = await e.GetMultipleFiles()[0].RequestImageFileAsync(format, 200, 200);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);

        var imageUri = $"data:{format};base64,{Convert.ToBase64String(buffer)}";

        cliente.FotoCliente = imageUri;
    }

    private async Task InputImageLicencia(InputFileChangeEventArgs e)
    {
        var format = "image/jpg";

        var resizedImage = await e.GetMultipleFiles()[0].RequestImageFileAsync(format, 200, 200);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);

        var imageUri = $"data:{format};base64,{Convert.ToBase64String(buffer)}";

        cliente.FotoLicencia = imageUri;
    }

    public void RegistrarCliente()
    {
        cliente.ClienteActivo = "Si";

        db.Add(cliente);
        db.SaveChanges();

        mensaje = "Se ha registrado un nuevo cliente.";
    }

    public List<Tiposangre> GetTiposSangre()
    {
        gestion_vehicularContext context = new gestion_vehicularContext();

        var tiposSangre = context.Tiposangre.ToList();

        return tiposSangre;
    }
}
