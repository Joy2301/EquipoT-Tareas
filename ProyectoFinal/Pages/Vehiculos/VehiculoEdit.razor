@page "/Vehiculos/vedit"
@using System.Net.Http.Json
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using ProyectoFinal.Models


<div class="container">

    <h3>Editar un Vehiculo Existente.</h3>

    <EditForm Model="@vehiculo" OnValidSubmit="UpdateVehiculo">
        <table class="table">
            <tr>
                <td>ID (SE NECESITA PARA LA ACTUALIZACION) </td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.Id">
                    <br>
                    <input type="button" value="Buscar ID" class="btn btn-primary" @onclick="SearchVehiculo" />
                    @mensajetest
                </td>
            </tr>
            <tr>
                <td>Marca:</td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.Marca">
                </td>
            </tr>
            <tr>
                <td>Modelo:</td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.Modelo">
                </td>
            </tr>
            <tr>
                <td>Año:</td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.Año">
                </td>
            </tr>
            <tr>
                <td>Color:</td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.Color">
                </td>
            </tr>
            <tr>
                <td>Precio por Dia (En RD$):</td>
                <td>
                    <input type="number" class="form-control col-sm-4" @bind="@vehiculo.Precio">
                </td>
            </tr>
            <tr>
                <td>Tipo:</td>
                <td>
                    <InputSelect class="form-control col-sm-4" @bind-Value="@vehiculo.TipoId">
                        <option value=0>Selecciona...</option>
                        @foreach (var tipo in GetTipos())
                        {
                            <option value="@tipo.Id"> @tipo.Tipo </option>
                        }
                    </InputSelect>
                </td>
            </tr>
            <tr>
                <td>Capacidad de Carga (En KG):</td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.CapacidadDeCarga">
                </td>
            </tr>
            <tr>
                <td>Pasajeros:</td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.Pasajeros">
                </td>
            </tr>
            <tr>
                <td>Matricula:</td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.Matricula">
                </td>
            </tr>
            <tr>
                <td>Num. Seguro:</td>
                <td>
                    <input type="text" class="form-control col-sm-4" @bind="@vehiculo.NroSeguro">
                </td>
            </tr>
            <tr>
                <td>Foto:</td>
                <td>
                    <InputFile OnChange="InputImage" class="form-control-file" />
                </td>
            </tr>
            <tr>
                <td>
                    <strong><p align="center">Ubicacion:</p></strong>
                    <br />
                    Latitud:
                    <input type="number" step="any" readonly class="form-control col-sm-4" @bind="@vehiculo.Latitud">
                    <br />
                    Longitud:
                    <input type="number" step="any" readonly class="form-control col-sm-4" @bind="@vehiculo.Longitud">
                </td>
            
                <td>
                    <br />
                    <br />
                    <br />
                    <br />
                    <InputSelect class="form-control col-sm-4" @bind-Value="@ProvinciaIdUbicacion">
                        <option value=0>Provincia...</option>
                        @foreach (var provincia in GetProvincias())
                        {
                            <option value="@provincia.Id"> @provincia.Nombre </option>}
                    </InputSelect>
                    <br />
                    <InputSelect class="form-control col-sm-4" @bind-Value="@MunicipioIdUbicacion">
                        <option value=0>Municipio...</option>
                        @foreach (var municipio in GetMunicipios())
                        {
                            <option value="@municipio.Id"> @municipio.Nombre</option>
                            vehiculo.Latitud = @municipio.Latitud;
                            vehiculo.Longitud = @municipio.Longitud;
                        }
                    </InputSelect>
                </td>
            </tr>
        </table>
    </EditForm>

    <input type="submit" value="Guardar" class="btn btn-primary" @onclick="UpdateVehiculo" />
    @mensaje
    <br><br>
</div>

@code {
    gestion_vehicularContext db = new gestion_vehicularContext();
    Vehiculos vehiculo = new Vehiculos();
    int ProvinciaIdUbicacion = 1;
    public int MunicipioIdUbicacion { get; set; }
    public int TipoId { get; set; }
    string mensaje = "No se ha editado ningun Vehiculo.";
    string mensajetest = "";

    public void SearchVehiculo()
    {
        bool result = db.Vehiculos.Any(v => v.Id == vehiculo.Id);
        if (result == true)
        {
            mensajetest = "Existe un Vehiculo con la ID en la Base de Datos.";
        }
        else
        {
            mensajetest = "No se encontro Ningun Vehiculo con esa ID en la Base de Datos";
        }
    }

    public void UpdateVehiculo()
    {
        var result = db.Vehiculos.Single(v => v.Id == vehiculo.Id);
        if (result != null)
        {
            if (vehiculo.Marca != null)
            {
                result.Marca = vehiculo.Marca;
            }
            if (vehiculo.Modelo != null)
            {
                result.Modelo = vehiculo.Modelo;
            }
            if (vehiculo.Año != null)
            {
                result.Año = vehiculo.Año;
            }
            if (vehiculo.Color != null)
            {
                result.Color = vehiculo.Color;
            }
            if (vehiculo.Precio != null)
            {
                result.Precio = vehiculo.Precio;
            }
            if (vehiculo.Tipo != null)
            {
                result.Tipo = vehiculo.Tipo;
            }
            if (vehiculo.CapacidadDeCarga != null)
            {
                result.CapacidadDeCarga = vehiculo.CapacidadDeCarga;
            }
            if (vehiculo.Pasajeros != null)
            {
                result.Pasajeros = vehiculo.Pasajeros;
            }
            if (vehiculo.NroSeguro != null)
            {
                result.NroSeguro = vehiculo.NroSeguro;
            }
            if (vehiculo.Foto != null)
            {
                result.Foto = vehiculo.Foto;
            }
            if (vehiculo.Latitud != null)
            {
                result.Latitud = vehiculo.Latitud;
            }
            if (vehiculo.Longitud != null)
            {
                result.Longitud = vehiculo.Longitud;
            }
            vehiculo.VehiculoDisponible = "Si";

            db.SaveChanges();
            mensaje = "Caso Robo editado exitosamente.";
        }
        else
        {
            mensaje = "Error encontrado en la busqueda. Vehiculo no encontrado.";
        }
    }

    private async Task InputImage(InputFileChangeEventArgs e)
    {
        var format = "image/jpg";

        var resizedImage = await e.GetMultipleFiles()[0].RequestImageFileAsync(format, 200, 200);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);

        var imageUri = $"data:{format};base64,{Convert.ToBase64String(buffer)}";

        vehiculo.Foto = imageUri;
    }

    public class VistaMunicipios
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public int ProvinciaId { get; set; }
        public float Latitud { get; set; }
        public float Longitud { get; set; }
    }
    public List<Provincias> GetProvincias()
    {
        gestion_vehicularContext context = new gestion_vehicularContext();

        var provincias = context.Provincias.ToList();

        return provincias;
    }
    public List<TipoVehiculo> GetTipos()
    {
        gestion_vehicularContext context = new gestion_vehicularContext();

        var tipos = context.TipoVehiculo.ToList();

        return tipos;
    }

    List<VistaMunicipios> GetMunicipios()
    {
        gestion_vehicularContext context = new gestion_vehicularContext();

        return context.Municipios
        .Join(
            context.Provincias,
            m => m.ProvinciaId,
            p => p.Id,
            (m, p) => new { Municipios = m, Provincias = p }
        )
        .Where(All => All.Municipios.ProvinciaId == ProvinciaIdUbicacion)
        .Select(
            m => new VistaMunicipios
            {
                Id = m.Municipios.Id,
                Nombre = m.Municipios.Nombre,
                Latitud = m.Municipios.Latitud,
                Longitud = m.Municipios.Longitud
            }
        ).ToList();
    }
}
